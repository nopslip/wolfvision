// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChangedMultisig extends ethereum.Event {
  get params(): ChangedMultisig__Params {
    return new ChangedMultisig__Params(this);
  }
}

export class ChangedMultisig__Params {
  _event: ChangedMultisig;

  constructor(event: ChangedMultisig) {
    this._event = event;
  }

  get multisig(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GrantAdded extends ethereum.Event {
  get params(): GrantAdded__Params {
    return new GrantAdded__Params(this);
  }
}

export class GrantAdded__Params {
  _event: GrantAdded;

  constructor(event: GrantAdded) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vestingId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GrantRemoved extends ethereum.Event {
  get params(): GrantRemoved__Params {
    return new GrantRemoved__Params(this);
  }
}

export class GrantRemoved__Params {
  _event: GrantRemoved;

  constructor(event: GrantRemoved) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amountVested(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountNotVested(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GrantTokensClaimed extends ethereum.Event {
  get params(): GrantTokensClaimed__Params {
    return new GrantTokensClaimed__Params(this);
  }
}

export class GrantTokensClaimed__Params {
  _event: GrantTokensClaimed;

  constructor(event: GrantTokensClaimed) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amountClaimed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TokenVesting__calculateGrantClaimResult {
  value0: i32;
  value1: BigInt;

  constructor(value0: i32, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class TokenVesting__tokenGrantsResult {
  value0: BigInt;
  value1: BigInt;
  value2: i32;
  value3: i32;
  value4: i32;
  value5: BigInt;
  value6: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: i32,
    value3: i32,
    value4: i32,
    value5: BigInt,
    value6: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    return map;
  }
}

export class TokenVesting extends ethereum.SmartContract {
  static bind(address: Address): TokenVesting {
    return new TokenVesting("TokenVesting", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  VESTING_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "VESTING_ADMIN_ROLE",
      "VESTING_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_VESTING_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "VESTING_ADMIN_ROLE",
      "VESTING_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  calculateGrantClaim(
    _grantId: BigInt
  ): TokenVesting__calculateGrantClaimResult {
    let result = super.call(
      "calculateGrantClaim",
      "calculateGrantClaim(uint256):(uint16,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_grantId)]
    );

    return new TokenVesting__calculateGrantClaimResult(
      result[0].toI32(),
      result[1].toBigInt()
    );
  }

  try_calculateGrantClaim(
    _grantId: BigInt
  ): ethereum.CallResult<TokenVesting__calculateGrantClaimResult> {
    let result = super.tryCall(
      "calculateGrantClaim",
      "calculateGrantClaim(uint256):(uint16,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_grantId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TokenVesting__calculateGrantClaimResult(
        value[0].toI32(),
        value[1].toBigInt()
      )
    );
  }

  getActiveGrantAmount(_recipient: Address): BigInt {
    let result = super.call(
      "getActiveGrantAmount",
      "getActiveGrantAmount(address):(uint256)",
      [ethereum.Value.fromAddress(_recipient)]
    );

    return result[0].toBigInt();
  }

  try_getActiveGrantAmount(_recipient: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getActiveGrantAmount",
      "getActiveGrantAmount(address):(uint256)",
      [ethereum.Value.fromAddress(_recipient)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getActiveGrants(_recipient: Address): Array<BigInt> {
    let result = super.call(
      "getActiveGrants",
      "getActiveGrants(address):(uint256[])",
      [ethereum.Value.fromAddress(_recipient)]
    );

    return result[0].toBigIntArray();
  }

  try_getActiveGrants(_recipient: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getActiveGrants",
      "getActiveGrants(address):(uint256[])",
      [ethereum.Value.fromAddress(_recipient)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  multiSig(): Address {
    let result = super.call("multiSig", "multiSig():(address)", []);

    return result[0].toAddress();
  }

  try_multiSig(): ethereum.CallResult<Address> {
    let result = super.tryCall("multiSig", "multiSig():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenGrants(param0: BigInt): TokenVesting__tokenGrantsResult {
    let result = super.call(
      "tokenGrants",
      "tokenGrants(uint256):(uint256,uint256,uint16,uint16,uint16,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new TokenVesting__tokenGrantsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toI32(),
      result[5].toBigInt(),
      result[6].toAddress()
    );
  }

  try_tokenGrants(
    param0: BigInt
  ): ethereum.CallResult<TokenVesting__tokenGrantsResult> {
    let result = super.tryCall(
      "tokenGrants",
      "tokenGrants(uint256):(uint256,uint256,uint16,uint16,uint16,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TokenVesting__tokenGrantsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toI32(),
        value[5].toBigInt(),
        value[6].toAddress()
      )
    );
  }

  tokensVestedPerDay(_grantId: BigInt): BigInt {
    let result = super.call(
      "tokensVestedPerDay",
      "tokensVestedPerDay(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_grantId)]
    );

    return result[0].toBigInt();
  }

  try_tokensVestedPerDay(_grantId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokensVestedPerDay",
      "tokensVestedPerDay(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_grantId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalVestingCount(): BigInt {
    let result = super.call(
      "totalVestingCount",
      "totalVestingCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalVestingCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalVestingCount",
      "totalVestingCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _multiSigAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTokenGrantCall extends ethereum.Call {
  get inputs(): AddTokenGrantCall__Inputs {
    return new AddTokenGrantCall__Inputs(this);
  }

  get outputs(): AddTokenGrantCall__Outputs {
    return new AddTokenGrantCall__Outputs(this);
  }
}

export class AddTokenGrantCall__Inputs {
  _call: AddTokenGrantCall;

  constructor(call: AddTokenGrantCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _startTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _vestingDurationInDays(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _vestingCliffInDays(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class AddTokenGrantCall__Outputs {
  _call: AddTokenGrantCall;

  constructor(call: AddTokenGrantCall) {
    this._call = call;
  }
}

export class ChangeMultiSigCall extends ethereum.Call {
  get inputs(): ChangeMultiSigCall__Inputs {
    return new ChangeMultiSigCall__Inputs(this);
  }

  get outputs(): ChangeMultiSigCall__Outputs {
    return new ChangeMultiSigCall__Outputs(this);
  }
}

export class ChangeMultiSigCall__Inputs {
  _call: ChangeMultiSigCall;

  constructor(call: ChangeMultiSigCall) {
    this._call = call;
  }

  get _newMultisig(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeMultiSigCall__Outputs {
  _call: ChangeMultiSigCall;

  constructor(call: ChangeMultiSigCall) {
    this._call = call;
  }
}

export class ClaimVestedTokensCall extends ethereum.Call {
  get inputs(): ClaimVestedTokensCall__Inputs {
    return new ClaimVestedTokensCall__Inputs(this);
  }

  get outputs(): ClaimVestedTokensCall__Outputs {
    return new ClaimVestedTokensCall__Outputs(this);
  }
}

export class ClaimVestedTokensCall__Inputs {
  _call: ClaimVestedTokensCall;

  constructor(call: ClaimVestedTokensCall) {
    this._call = call;
  }

  get _grantId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimVestedTokensCall__Outputs {
  _call: ClaimVestedTokensCall;

  constructor(call: ClaimVestedTokensCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RemoveTokenGrantCall extends ethereum.Call {
  get inputs(): RemoveTokenGrantCall__Inputs {
    return new RemoveTokenGrantCall__Inputs(this);
  }

  get outputs(): RemoveTokenGrantCall__Outputs {
    return new RemoveTokenGrantCall__Outputs(this);
  }
}

export class RemoveTokenGrantCall__Inputs {
  _call: RemoveTokenGrantCall;

  constructor(call: RemoveTokenGrantCall) {
    this._call = call;
  }

  get _grantId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveTokenGrantCall__Outputs {
  _call: RemoveTokenGrantCall;

  constructor(call: RemoveTokenGrantCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}
